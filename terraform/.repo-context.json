{
  "project_identity": {
    "name": "Terraform Infrastructure Management for Azure VMSS Kubernetes Cluster",
    "type": "container",
    "scope": "infrastructure-as-code",
    "description": "Enterprise-grade Terraform Infrastructure as Code container for provisioning production-ready Azure VMSS infrastructure optimized for Kubernetes workloads with advanced networking, security, and automation patterns.",
    "is_independent": false,
    "version": "2.0.0",
    "curriculum_stage": "advanced"
  },
  "tech_stack": {
    "primary": ["Terraform 1.0+", "HCL (HashiCorp Configuration Language)", "Azure Provider 3.0+"],
    "secondary": ["Azure CLI 2.0+", "Azure Resource Manager", "Azure Storage", "Azure Key Vault"],
    "key_libraries": ["azurerm", "random", "azapi", "azuread"],
    "development_tools": ["terraform-cli", "azure-cli", "tflint", "terraform-docs", "checkov"],
    "testing_frameworks": ["terratest", "terraform-compliance", "tfsec"]
  },
  "skill_manifest": {
    "technical": [
      "Advanced Terraform Architecture",
      "Azure Resource Management",
      "Infrastructure as Code Design",
      "State Management & Collaboration",
      "Resource Dependency Orchestration",
      "Variable & Output Management",
      "Provider Configuration",
      "Remote Backend Configuration",
      "Infrastructure Validation",
      "Resource Tagging & Organization",
      "Cost Optimization Strategies"
    ],
    "domain": [
      "Cloud Infrastructure Provisioning",
      "Azure Virtual Machine Scale Sets",
      "Network Architecture Design",
      "Security Infrastructure Implementation",
      "Load Balancing & High Availability",
      "Identity & Access Management",
      "Secret Management & Key Vault",
      "Infrastructure Automation",
      "DevOps Integration Patterns"
    ],
    "competency_level": "advanced",
    "prerequisites": [
      "Strong understanding of Terraform fundamentals and HCL syntax",
      "Comprehensive knowledge of Azure services and architecture patterns",
      "Experience with infrastructure as code principles and practices",
      "Understanding of networking concepts and security principles",
      "Familiarity with DevOps workflows and automation"
    ]
  },
  "components": {
    "infrastructure_resources": [
      {
        "name": "Resource Group Management",
        "files": ["main.tf"],
        "description": "Dynamic resource group creation with naming conventions"
      },
      {
        "name": "Virtual Network Architecture",
        "files": ["main.tf"],
        "description": "VNet, subnet, and network security group configuration"
      },
      {
        "name": "Virtual Machine Scale Set",
        "files": ["main.tf"],
        "description": "Auto-scaling VMSS with Ubuntu 22.04 and spot instance configuration"
      },
      {
        "name": "Load Balancer Setup",
        "files": ["main.tf"],
        "description": "Azure Load Balancer with public IP and backend pool configuration"
      },
      {
        "name": "Security & Identity",
        "files": ["ssh.tf", "main.tf"],
        "description": "Managed identity, Key Vault, and SSH key management"
      }
    ],
    "configuration_management": [
      {
        "name": "Variable Definitions",
        "files": ["variables.tf"],
        "description": "Input variables for flexible infrastructure configuration"
      },
      {
        "name": "Output Definitions",
        "files": ["outputs.tf"],
        "description": "Structured outputs for downstream Ansible integration"
      },
      {
        "name": "Provider Configuration",
        "files": ["providers.tf"],
        "description": "Azure provider and backend configuration"
      }
    ],
    "automation_scripts": [
      {
        "name": "Deployment Scripts",
        "files": ["scripts/"],
        "description": "Automated deployment and management utilities"
      }
    ]
  },
  "topics": [
    "Infrastructure as Code (IaC)",
    "Azure Virtual Machine Scale Sets",
    "Terraform State Management",
    "Azure Networking & Security",
    "Resource Automation & Orchestration",
    "DevOps Integration Patterns",
    "Cost Optimization & Resource Management",
    "Security Best Practices",
    "Multi-Environment Infrastructure"
  ],
  "project_structure": {
    "type": "terraform_container",
    "organization": "modular_iac",
    "key_directories": ["scripts/"],
    "entry_points": ["main.tf", "variables.tf", "outputs.tf"],
    "configuration_files": ["providers.tf", "ssh.tf"],
    "output_files": ["terraform_outputs.json", "main.tfplan"]
  },
  "outcomes": {
    "infrastructure_deliverables": [
      "Production-ready Azure VMSS infrastructure",
      "Secure networking with VNet and NSG configuration",
      "Auto-scaling compute resources with cost optimization",
      "Load balancer with high availability setup",
      "Managed identity and Key Vault integration",
      "Structured outputs for configuration management integration"
    ],
    "learning_deliverables": [
      "Advanced Terraform module design and architecture",
      "Azure resource provisioning and management expertise",
      "Infrastructure security and networking implementation",
      "State management and team collaboration patterns",
      "Cost optimization and resource efficiency strategies"
    ],
    "integration_points": [
      "Terraform outputs consumed by Ansible configuration management",
      "Azure Key Vault integration for secure credential management",
      "VMSS instances ready for Kubernetes cluster configuration",
      "Network infrastructure supporting container orchestration"
    ]
  },
  "relationships": {
    "parent": "azure_vmss_cluster",
    "peers": ["ansible", "gitops"],
    "outputs_to": ["ansible"],
    "depends_on": [],
    "consumers": ["ansible configuration management", "gitops deployment pipeline"]
  },
  "files": {
    "terraform_configuration": [
      {
        "path": "main.tf",
        "purpose": "Primary infrastructure resource definitions",
        "skills": ["Resource orchestration", "Dependency management", "Azure services"]
      },
      {
        "path": "variables.tf",
        "purpose": "Input variable declarations and validation",
        "skills": ["Configuration management", "Input validation", "Environment flexibility"]
      },
      {
        "path": "outputs.tf",
        "purpose": "Output definitions for downstream integration",
        "skills": ["Data export", "Integration patterns", "Structured outputs"]
      },
      {
        "path": "providers.tf",
        "purpose": "Provider configuration and backend setup",
        "skills": ["Provider management", "State backend", "Version constraints"]
      },
      {
        "path": "ssh.tf",
        "purpose": "SSH key generation and Key Vault integration",
        "skills": ["Security management", "Key automation", "Secret storage"]
      }
    ],
    "generated_outputs": [
      {
        "path": "terraform_outputs.json",
        "purpose": "Ansible integration data",
        "skills": ["Cross-tool integration", "Data serialization", "Automation workflows"]
      },
      {
        "path": "main.tfplan",
        "purpose": "Execution plan caching",
        "skills": ["Plan management", "Change review", "Deployment safety"]
      }
    ]
  },
  "assessment": {
    "infrastructure_quality": [
      "Resource provisioning completeness and correctness",
      "Security implementation and best practices adherence",
      "Network architecture design and configuration",
      "Cost optimization and resource efficiency",
      "Integration readiness for downstream automation"
    ],
    "code_quality": [
      "Terraform code organization and modularity",
      "Variable and output design patterns",
      "Documentation and inline comments",
      "Validation and error handling",
      "Version control and collaboration readiness"
    ],
    "operational_excellence": [
      "State management and backend configuration",
      "Deployment automation and repeatability",
      "Environment configuration flexibility",
      "Monitoring and troubleshooting capabilities",
      "Maintenance and update procedures"
    ]
  },
  "metadata": {
    "last_updated": "2025-06-24",
    "schema_version": "2.0",
    "quality_score": 0.95,
    "completeness": 0.98,
    "maintainability": 0.92,
    "documentation_coverage": 0.96,
    "test_coverage": 0.85,
    "security_score": 0.94
  }
}