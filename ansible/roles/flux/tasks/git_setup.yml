---
- name: Validate GitHub token
  block:
    - name: Include vaulted secrets
      include_vars:
        file: roles/flux/vars/secrets.yml
        name: secrets
      no_log: true

    - name: Ensure GitHub token is valid
      uri:
        url: "https://api.github.com/repos/yungryce/azure_vmss_cluster"
        method: GET
        headers:
          Authorization: "Bearer {{ github_token }}"
        status_code: 200
      register: token_check
      no_log: true


- name: Setup deploy keys 
  block:
    - name: Check if deploy key already exists
      uri:
        url: "https://api.github.com/repos/yungryce/azure_vmss_cluster/keys"
        method: GET
        headers:
          Authorization: "Bearer {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
        status_code: 200
      register: existing_keys

    - name: Add deploy key if not exists
      uri:
        url: "https://api.github.com/repos/yungryce/azure_vmss_cluster/keys"
        method: POST
        headers:
          Authorization: "Bearer {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
        body_format: json
        body:
          title: "flux-deploy-{{ ansible_date_time.date }}"
          key: "{{ lookup('file', '/home/azureuser/.ssh/flux-deploy-key.pub') | trim }}"
          read_only: false
        status_code: 201
      when: 
        - token_check.status == 200
        - hostvars[inventory_hostname].is_master
        - >
            lookup('file', '/home/azureuser/.ssh/flux-deploy-key.pub') | regex_replace(' .*', '') | trim
            not in existing_keys.json | map(attribute='key') | map('regex_replace', ' .*', '') | list

    - name: Configure SSH for GitHub
      blockinfile:
        path: /root/.ssh/config
        block: |
          Host github.com
            IdentityFile /root/.ssh/flux-deploy-key
            User git
            IdentitiesOnly yes
        create: yes
        mode: '0600'
      when: hostvars[inventory_hostname].is_master


- name: Push GitOps changes to Git repository
  block:
    - name: Validate SSH key exists
      stat:
        path: /home/azureuser/.ssh/flux-deploy-key
      register: ssh_key_stat
      delegate_to: localhost

    - name: Fail if SSH key does not exist
      fail:
        msg: "flux-deploy-key not found in /home/azureuser/.ssh/"
      when: not ssh_key_stat.stat.exists
      delegate_to: localhost

    - name: Test GitHub connectivity
      command: ssh -T git@github.com -i /home/azureuser/.ssh/flux-deploy-key
      args:
        warn: false
      register: github_test
      changed_when: false
      failed_when: 
        - github_test.rc != 1
        - "'successfully authenticated' not in github_test.stderr"
      delegate_to: localhost

    - name: Stage all changes
      command: git add .
      args:
        chdir: /home/azureuser/azure_vmss_cluster
      delegate_to: localhost

    - name: Get list of modified files
      command: git status --porcelain
      args:
        chdir: /home/azureuser/azure_vmss_cluster
      register: git_status
      changed_when: false
      delegate_to: localhost

    - name: Generate commit message
      set_fact:
        commit_message: |
          Modified files:
          {{ git_status.stdout | regex_replace('^', '      ') }}
      delegate_to: localhost

    - name: Commit changes with modified files list
      command: >
        git commit -m "{{ commit_message }}"
      args:
        chdir: /home/azureuser/azure_vmss_cluster
      when: git_status.stdout != ""
      ignore_errors: true
      delegate_to: localhost

    - name: Sync with remote changes
      command: >
        git fetch --all && git reset --hard origin/main
      args:
        chdir: /home/azureuser/azure_vmss_cluster
      environment:
        GIT_SSH_COMMAND: "ssh -i /home/azureuser/.ssh/flux-deploy-key -o IdentitiesOnly=yes -o StrictHostKeyChecking=no"
      ignore_errors: true
      delegate_to: localhost

    - name: Push changes to remote repository
      command: git push origin main
      args:
        chdir: /home/azureuser/azure_vmss_cluster
      environment:
        GIT_SSH_COMMAND: "ssh -i /home/azureuser/.ssh/flux-deploy-key -o IdentitiesOnly=yes -o StrictHostKeyChecking=no"
      ignore_errors: true
      delegate_to: localhost  # Add this to the block
  become_user: azureuser