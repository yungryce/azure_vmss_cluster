---
- name: Setup GitOps directory structure
  include_tasks: gitops_setup.yml

- name: Include Git setup tasks
  include_tasks: git_setup.yml

- name: Install flux binary
  include_tasks: install_flux.yml
  when: hostvars[inventory_hostname].is_master

- name: Check connectivity to Kubernetes API server
  command: curl -k https://10.0.1.5:6443/healthz
  register: api_server_health
  retries: 5
  delay: 10
  until: api_server_health.rc == 0

- name: Bootstrap Flux
  when: hostvars[inventory_hostname].is_master and api_server_health.rc == 0
  block:
        
    - name: Bootstrap Flux with Git repository
      shell: |
        flux install \
          --components-extra=image-reflector-controller,image-automation-controller \
          --network-policy=false
        printf 'y\n' | flux bootstrap git \
          --url=ssh://git@github.com/yungryce/azure_vmss_cluster.git \
          --branch=main \
          --path=./gitops/clusters/development \
          --components=source-controller,kustomize-controller \
          --ssh-key-algorithm=ed25519 \
          --private-key-file=/root/.ssh/flux-deploy-key \
          --network-policy=false \
          --timeout=10m \
          --verbose
      args:
        executable: /bin/bash
        creates: /etc/flux_bootstrapped
      environment:
        KUBECONFIG: /root/.kube/config
        GIT_SSH_COMMAND: "ssh -i /root/.ssh/flux-deploy-key -o IdentitiesOnly=yes -o StrictHostKeyChecking=no"
      register: flux_bootstrap
      failed_when:
        - flux_bootstrap.rc != 0
        - "'already exists' not in flux_bootstrap.stderr"

    - name: Mark Flux as bootstrapped
      file:
        path: /etc/flux_bootstrapped
        state: touch
      when: flux_bootstrap.rc == 0 or 'already exists' in flux_bootstrap.stderr|default('')

    - name: Verify Flux deployment
      command: flux check
      register: flux_check
      retries: 30
      delay: 10
      until: flux_check.rc == 0
      when: not flux_bootstrap.failed | default(false)

- name: Gitops configuration management
  delegate_to: localhost
  block:
  - name: Pull remote and add Git repository changes from Flux bootstrapping
    shell: |
      git pull origin main
      git add .
    args:
      chdir: /home/azureuser/azure_vmss_cluster

  - name: Get list of modified files
    command: git status --porcelain
    register: git_status
    changed_when: false
    args:
      chdir: /home/azureuser/azure_vmss_cluster

  - name: Generate commit message
    set_fact:
      commit_message: |
        Modified files:
        {{ git_status.stdout | regex_replace('^', '      ') }}
    when: git_status.stdout != ""

  - name: Push local GitOps configuration to remote
    shell: |
      git commit -m "{{ commit_message }}" || echo "No changes to commit"
      git push origin main
    args:
      chdir: /home/azureuser/azure_vmss_cluster
 