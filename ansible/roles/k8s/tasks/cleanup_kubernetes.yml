---
- name: Gather service facts
  ansible.builtin.service_facts:
  become: true

- name: Stop kubelet service if it exists
  ansible.builtin.systemd:
    name: kubelet
    state: stopped
    enabled: no
  when: "'kubelet' in services"
  become: true

- name: Stop containerd service if it exists
  ansible.builtin.systemd:
    name: containerd
    state: stopped
    enabled: no
  when: "'containerd' in services"
  become: true

- name: Check if kubeadm exists
  ansible.builtin.shell: "command -v kubeadm"
  register: kubeadm_check
  ignore_errors: true

- name: Debug kubeadm path (if exists)
  ansible.builtin.debug:
    msg: "kubeadm is located at {{ kubeadm_check.stdout }}"
  when: kubeadm_check.rc == 0

- name: Reset Kubernetes cluster (if kubeadm exists)
  ansible.builtin.command: "kubeadm reset -f"
  register: kubeadm_reset
  failed_when: kubeadm_reset.rc not in [0, 1]
  when: kubeadm_check.rc == 0

- name: Check if /etc/kubernetes is a directory
  ansible.builtin.stat:
    path: /etc/kubernetes
  register: k8s_conf_dir
  become: true

- name: Remove Kubernetes configuration directory if it is a directory
  ansible.builtin.file:
    path: /etc/kubernetes
    state: absent
  when: k8s_conf_dir.stat.isdir | default(false)
  become: true

- name: Check if /var/lib/etcd is a directory
  ansible.builtin.stat:
    path: /var/lib/etcd
  register: etcd_dir
  become: true

- name: Remove etcd data directory if it is a directory
  ansible.builtin.file:
    path: /var/lib/etcd
    state: absent
  when: etcd_dir.stat.exists and etcd_dir.stat.isdir | default(false)
  become: true

- name: Ensure specified ports are free
  ansible.builtin.shell: |
    for port in 6443 10259 10257 10250 2379 2380; do
      fuser -k $port/tcp 2>/dev/null || true
    done
  args:
    warn: false
  ignore_errors: true
  become: true

- name: Verify ports are free
  ansible.builtin.command: lsof -iTCP -sTCP:LISTEN -P
  register: port_check
  changed_when: false
  become: true

- name: Debug port usage
  debug:
    msg: "{{ port_check.stdout_lines }}"
  when: port_check.stdout_lines | length > 0