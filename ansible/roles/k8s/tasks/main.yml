---
- name: Cleanup existing Kubernetes configuration
  import_tasks: cleanup_kubernetes.yml
  become: true

- name: Install Kubernetes Python library
  pip:
    name: kubernetes
    executable: pip3

- name: Add Kubernetes GPG key using apt_key
  ansible.builtin.apt_key:
    url: https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key
    state: present
    keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  become: true

- name: Add Kubernetes repository using apt_repository
  ansible.builtin.apt_repository:
    repo: 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /'
    state: present
    filename: kubernetes
    update_cache: true
  become: true

- name: Update apt cache and install Kubernetes packages
  ansible.builtin.apt:
    name:
      - kubeadm
      - kubelet
      - kubectl
    state: present
    force: true
    update_cache: true
  become: true

- name: disable UFW firewall for labs
  ansible.builtin.service:
    name: ufw
    state: stopped
    enabled: false
  become: true

- name: Check if swap is active
  ansible.builtin.shell: free | grep -Eq 'Swap:\s+[1-9]'
  register: swap_active
  failed_when: false
  changed_when: false
  become: true

- name: Disable swap if active
  ansible.builtin.command: swapoff -a
  when: swap_active.rc == 0
  register: disable_swap
  changed_when: disable_swap.rc == 0
  become: true

- name: Ensure swap is disabled on boot
  ansible.builtin.lineinfile:
    path: /etc/fstab
    regexp: '^/swap'
    line: '#/swap'
    backup: true
  become: true

- name: Load br_netfilter module
  ansible.builtin.modprobe:
    name: br_netfilter
    state: present
  become: true

- name: Ensure net.bridge.bridge-nf-call-ip6tables is set to 1
  ansible.builtin.sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: '1'
    state: present
    reload: true
  become: true

- name: Ensure net.ipv4.ip_forward is set to 1
  ansible.builtin.sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
    reload: true
  become: true

- name: Configure kubelet to use systemd as cgroup driver
  lineinfile:
    path: /etc/default/kubelet
    regexp: '^KUBELET_EXTRA_ARGS='
    line: 'KUBELET_EXTRA_ARGS=--cgroup-driver=systemd'
  notify: Restart kubelet
  become: true

- name: Include master node configuration (if master)
  import_tasks: master.yml
  when: hostvars[inventory_hostname].is_master
  become: true

- name: Wait for Kubernetes master node to be ready
  ansible.builtin.wait_for:
    host: "{{ inventory_hostname }}"
    port: 6443
    state: started
    delay: 10
    timeout: 300
  when: hostvars[inventory_hostname].is_master
  become: true

- name: Include worker node configuration (if worker)
  import_tasks: worker.yml
  when: hostvars[inventory_hostname].is_worker
  become: true

- name: Deploy Flannel CNI
  import_tasks: flannel.yml
  when: hostvars[inventory_hostname].is_master
  become: true