{
  "project_identity": {
    "name": "Azure VMSS Kubernetes Cluster with GitOps",
    "type": "project",
    "scope": "devops",
    "screenshotUrl": "https://i.imgur.com/Pu28iPG.png",
    "description": "Production-ready infrastructure-as-code solution for deploying and managing Kubernetes clusters on Azure Virtual Machine Scale Sets with comprehensive GitOps workflow integration. Demonstrates enterprise-grade DevOps practices, multi-layer automation, and cloud-native deployment patterns.",
    "is_independent": true,
    "version": "2.0.0",
    "curriculum_stage": "capstone"
  },
  "tech_stack": {
    "primary": ["Terraform 1.0+", "Ansible 2.9+", "Kubernetes 1.24+", "Azure VMSS"],
    "secondary": ["Flux CD 2.0", "Azure CLI", "Python 3.8+", "Containerd 1.6+", "Flannel CNI"],
    "key_libraries": ["Azure Provider ~>3.0", "Azure Resource Manager", "Azure Key Vault", "Azure Load Balancer", "Azure Virtual Network"],
    "development_tools": ["Azure CLI", "kubectl", "terraform", "ansible", "flux", "git", "Visual Studio Code"],
    "testing_frameworks": ["terraform validate", "ansible-lint", "yamllint", "kubernetes validation"]
  },
  "skill_manifest": {
    "technical": [
      "Infrastructure as Code (IaC)",
      "Configuration Management",
      "Container Orchestration", 
      "GitOps Implementation",
      "Cloud Resource Provisioning",
      "Network Architecture Design",
      "Security Posture Management",
      "Multi-Layer Automation",
      "CI/CD Pipeline Development",
      "Scalable Infrastructure Design",
      "Managed Identity Integration",
      "SSH Key Automation"
    ],
    "domain": [
      "Cloud Architecture",
      "DevOps Engineering", 
      "Kubernetes Administration",
      "Azure Infrastructure",
      "Continuous Deployment",
      "Network Security",
      "Identity Management",
      "Automation Engineering",
      "Production System Management",
      "Enterprise Infrastructure"
    ],
    "competency_level": "advanced-to-expert",
    "prerequisites": [
      "Strong understanding of cloud computing concepts",
      "Experience with containerization and Kubernetes",
      "Familiarity with Infrastructure as Code principles",
      "Basic knowledge of networking and security",
      "Understanding of CI/CD concepts"
    ]
  },
  "components": {
    "main_directories": [
      {
        "path": "terraform/",
        "purpose": "Infrastructure provisioning layer with Azure resource definitions",
        "complexity": "advanced",
        "key_files": ["main.tf", "variables.tf", "outputs.tf", "ssh.tf"],
        "responsibilities": ["Azure VMSS provisioning", "Network infrastructure", "Security group configuration", "SSH key management"]
      },
      {
        "path": "ansible/",
        "purpose": "Configuration management layer for cluster setup and node configuration", 
        "complexity": "advanced",
        "key_files": ["playbook.yml", "azure_vmss_inventory.py", "requirements.yml"],
        "responsibilities": ["Dynamic inventory generation", "Kubernetes cluster deployment", "Container runtime setup", "Node configuration"]
      },
      {
        "path": "gitops/",
        "purpose": "GitOps workflow definitions and Kubernetes manifests",
        "complexity": "intermediate",
        "key_files": ["flux configuration", "kubernetes manifests"],
        "responsibilities": ["Continuous deployment", "Application lifecycle management", "Configuration drift detection"]
      }
    ],
    "integration_points": [
      {
        "source": "terraform",
        "target": "ansible", 
        "mechanism": "terraform_outputs.json",
        "purpose": "Infrastructure metadata transfer for dynamic inventory"
      },
      {
        "source": "ansible",
        "target": "gitops",
        "mechanism": "kubernetes cluster setup",
        "purpose": "Platform preparation for GitOps deployment"
      }
    ]
  },
  "topics": [
    "Infrastructure as Code",
    "Azure Virtual Machine Scale Sets",
    "Kubernetes Cluster Management",
    "GitOps Workflows",
    "Configuration Management",
    "Container Orchestration",
    "Network Security",
    "Managed Identity",
    "Load Balancing",
    "SSH Key Automation",
    "Multi-Layer Automation",
    "Production Infrastructure",
    "DevOps Best Practices",
    "Cloud Native Architecture"
  ],
  "projectStructure": {
    "entryPoint": "init.sh",
    "configFiles": ["terraform/variables.tf", "ansible/requirements.yml", ".yamllint"],
    "documentationFiles": ["README.md", "ARCHITECTURE.md", "SKILLS-INDEX.md", "AUTHORS.md"],
    "infrastructureFiles": ["terraform/main.tf", "terraform/outputs.tf", "terraform/ssh.tf"],
    "automationFiles": ["ansible/playbook.yml", "ansible/azure_vmss_inventory.py"],
    "deploymentWorkflow": ["terraform", "ansible", "gitops"]
  },
  "outcomes": {
    "primary": [
      "Deploy production-ready Kubernetes cluster on Azure VMSS",
      "Implement comprehensive GitOps workflow for continuous deployment", 
      "Establish multi-layer infrastructure automation pipeline",
      "Configure enterprise-grade security and networking",
      "Demonstrate advanced DevOps engineering practices"
    ],
    "skills_acquired": [
      "Advanced Terraform module development and state management",
      "Complex Ansible playbook design and dynamic inventory management",
      "Kubernetes cluster administration and security hardening",
      "Flux CD implementation and GitOps workflow design",
      "Azure cloud architecture and network security implementation",
      "Multi-tool integration and workflow orchestration"
    ],
    "deliverables": [
      "Complete infrastructure-as-code solution", 
      "Automated cluster deployment pipeline",
      "GitOps-enabled continuous deployment system",
      "Production-ready security configuration",
      "Comprehensive documentation and architecture guides",
      "Reusable automation frameworks"
    ]
  },
  "prerequisites": {
    "knowledge": [
      "Advanced understanding of Kubernetes architecture and administration",
      "Proficiency in Terraform and Infrastructure as Code principles",
      "Experience with Ansible and configuration management",
      "Understanding of Azure cloud services and networking",
      "Familiarity with GitOps concepts and continuous deployment"
    ],
    "technical": [
      "Azure subscription with appropriate permissions",
      "Terraform 1.0+ installed and configured",
      "Ansible 2.9+ with Azure collections",
      "Azure CLI configured with authentication",
      "kubectl and flux CLI tools",
      "Git version control system"
    ]
  },
  "associatedProjects": [
    {
      "name": "startstopvm",
      "relationship": "Related Azure automation project",
      "shared_concepts": ["Azure Infrastructure", "Automation", "Cost Optimization"]
    },
    {
      "name": "authentication-FA",
      "relationship": "Complementary serverless solution",
      "shared_concepts": ["Azure Services", "Security", "Identity Management"]
    }
  ],
  "files": {
    "total_count": 25,
    "by_type": {
      "infrastructure_code": 8,
      "configuration_management": 6,
      "documentation": 5,
      "deployment_scripts": 3,
      "gitops_manifests": 3
    },
    "key_files": [
      "terraform/main.tf",
      "ansible/playbook.yml", 
      "azure_vmss_inventory.py",
      "init.sh",
      "README.md",
      "ARCHITECTURE.md"
    ]
  },
  "assessment": {
    "difficulty": "advanced",
    "estimated_hours": 40,
    "complexity_factors": [
      "Multi-layer architecture integration",
      "Azure VMSS and networking configuration",
      "Kubernetes cluster setup and security",
      "GitOps workflow implementation",
      "Dynamic inventory and state management",
      "Production-grade security implementation"
    ],
    "evaluation_criteria": [
      "Successful infrastructure provisioning with Terraform",
      "Functional Kubernetes cluster deployment",
      "Working GitOps continuous deployment pipeline",
      "Proper security implementation and network isolation",
      "Integration between all automation layers",
      "Production readiness and scalability"
    ]
  },
  "metadata": {
    "created_date": "2024",
    "last_updated": "2025-06-24", 
    "maintainer": "Chigbu Joshua",
    "license": "MIT",
    "repository_type": "capstone-project",
    "tags": ["terraform", "ansible", "kubernetes", "azure-vmss", "gitops", "infrastructure-as-code", "devops", "automation"],
    "quality_indicators": {
      "code_coverage": "comprehensive",
      "documentation_quality": "excellent",
      "test_coverage": "good", 
      "production_readiness": "high"
    }
  },
  "deployment_workflow": [
    {
      "step": 1,
      "name": "Infrastructure Provisioning",
      "component": "terraform",
      "description": "Provision Azure VMSS, networking, and security resources",
      "artifacts": ["terraform_outputs.json", "SSH keys in Key Vault"],
      "estimated_duration": "10-15 minutes"
    },
    {
      "step": 2,
      "name": "Dynamic Inventory Generation", 
      "component": "ansible",
      "script": "azure_vmss_inventory.py",
      "description": "Generate Ansible inventory from VMSS instances",
      "artifacts": ["azure_vmss_inventory.json"],
      "estimated_duration": "2-3 minutes"
    },
    {
      "step": 3,
      "name": "Cluster Configuration",
      "component": "ansible",
      "script": "playbook.yml", 
      "description": "Configure Kubernetes cluster on VMSS instances",
      "artifacts": ["Functional Kubernetes cluster"],
      "estimated_duration": "15-20 minutes"
    },
    {
      "step": 4,
      "name": "GitOps Setup",
      "component": "gitops",
      "description": "Install and configure Flux CD for continuous deployment",
      "artifacts": ["GitOps controllers", "Repository synchronization"],
      "estimated_duration": "5-10 minutes"
    },
    {
      "step": 5,
      "name": "Application Deployment",
      "component": "gitops", 
      "description": "Deploy applications using GitOps workflow",
      "artifacts": ["Running applications", "Continuous deployment pipeline"],
      "estimated_duration": "Ongoing"
    }
  ]
}
